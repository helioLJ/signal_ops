version: "3.9"

services:
  postgres:
    image: postgres:16-alpine
    container_name: signalops-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: signal_ops
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5434:5432"  # expose on 5434 to avoid host 5432/5433 conflict
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 10

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.104.0
    container_name: signalops-otel-collector
    command: ["--config", "/etc/otel/config.yaml"]
    volumes:
      - ./observability/otel/config.yaml:/etc/otel/config.yaml:ro
    # No port mappings needed - backend connects via Docker network

  prometheus:
    image: prom/prometheus:v2.54.1
    container_name: signalops-prometheus
    volumes:
      - ./observability/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"

  loki:
    image: grafana/loki:2.9.8
    container_name: signalops-loki
    command: ["-config.file=/etc/loki/config.yml"]
    volumes:
      - ./observability/loki/config.yml:/etc/loki/config.yml:ro
    ports:
      - "3100:3100"

  tempo:
    image: grafana/tempo:2.6.1
    container_name: signalops-tempo
    command: ["-config.file=/etc/tempo/config.yaml"]
    volumes:
      - ./observability/tempo/config.yaml:/etc/tempo/config.yaml:ro
    ports:
      - "3200:3200"
      - "4317:4317" # OTLP gRPC
      - "4318:4318" # OTLP HTTP

  grafana:
    image: grafana/grafana:11.2.0
    container_name: signalops-grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./observability/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro
      - ./observability/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./observability/grafana/provisioning/alerting:/etc/grafana/provisioning/alerting:ro
    ports:
      - "3001:3000"
    depends_on:
      - prometheus
      - loki
      - tempo

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: signalops-backend
    environment:
      NODE_ENV: development
      PORT: 3000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      DB_NAME: signal_ops
      OTEL_LOGS_EXPORTER: otlp
      OTEL_TRACES_EXPORTER: otlp
      OTEL_LOG_LEVEL: debug
      OTEL_EXPORTER_OTLP_TRACES_ENDPOINT: http://otel-collector:4318/v1/traces
      OTEL_EXPORTER_OTLP_METRICS_ENDPOINT: http://otel-collector:4318/v1/metrics
      OTEL_EXPORTER_OTLP_LOGS_ENDPOINT: http://otel-collector:4318/v1/logs
    ports:
      - "3002:3000"  # remapped host port to 3002
      - "9464:9464" # Prometheus metrics exporter (OTEL SDK)
    depends_on:
      postgres:
        condition: service_healthy
      otel-collector:
        condition: service_started

volumes:
  postgres_data:
  grafana_data:
